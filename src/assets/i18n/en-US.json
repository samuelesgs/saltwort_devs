{
    "app-name": "Salwort Devs",
    "page": {
        "home": "Home",
        "devs": "Developers",
        "apps": "Applications",
        "about": "About of"
    },
    "policy_privaticy": {
        "title": "Privacy Policy",
        "description": "At Salwort Devs, we are committed to protecting and respecting your privacy. This privacy policy explains how we collect, use, disclose and protect your personal information when you visit our website and use our services.",
        "title-point-1": "Information we collect",
        "description-point-1": "We may collect and process the following personal data: Information you provide to us: Name, email address, phone number and any other information you submit to us through forms on our website. Information we collect automatically: Information about your visit, including traffic data, location data, weblogs and other communication data, and the resources that you access.<br>Cookies and similar technologies: We use cookies to collect information about your online activity on our website. You can control the use of cookies through your browser settings.",
        "title-point-2": "Use of your information",
        "description-point-2": "We use the information we collect for the following purposes:\n\nTo provide and manage our services.\n\nTo personalize your experience on our website.\n\nTo communicate with you, including sending important notifications and updates.\n\nTo improve our website and services by analyzing how users interact with them.\n\nTo comply with our legal obligations and to resolve disputes.",
        "title-point-3": "Disclosure of your information",
        "description-point-3": "We may share your personal information with third parties in the following circumstances:\n\nWith service providers who help us operate our business, such as web hosting and data analysis services.\n\nIf we are under a legal obligation to disclose your information or to protect our rights, property, or safety.\n\nIn the event of a merger, acquisition, or asset sale, your data may be transferred as part of that transaction.",
        "title-point-4": "Security of your information",
        "description-point-4": "We take reasonable steps to protect your personal information from unauthorized access, alteration, disclosure or destruction.\n\nHowever, no data transmission over the Internet or electronic storage is completely secure.\n\nTherefore, we cannot guarantee the absolute security of your information.",
        "title-point-5": "Data retention",
        "description-point-5": "We retain your personal information only for as long as necessary to fulfill the purposes for which it was collected, including any legal, accounting, or reporting requirements.",
        "title-point-6": "Your rights",
        "description-point-6": "You have the right to access, correct, update or delete your personal information. You may also have the right to restrict or object to the processing of your personal information, as well as request data portability. To exercise these rights, please contact us using the contact details provided below.",
        "title-point-7": "Changes to this privacy policy",
        "description-point-7": "We may update this privacy policy from time to time. We will post any changes on this page and, if the changes are significant, we will notify you by email or by means of a notice on our website."
    },
    "home": {
        "home-description": "At Salwort, we are a young and innovative company. Committed to research, optimization, and streamlining solutions.",
        "title-1": "Main Screen",
        "screen-1": "On this screen, you can register if you already have an account, create one, or log in with Google",
        "title-2": "Home Page",
        "screen-2": "You can see various sections, the boards you have, their statuses, and at the bottom, a top categories list to see the categories you use the most",
        "title-3": "Boards",
        "screen-3": "Here, you can add a board along with its details",
        "title-4": "Board Saved",
        "screen-4": "Here, you can see how the board has been saved",
        "title-5": "Categories",
        "screen-5": "On this screen, you can add your categories",
        "title-6": "How to Add Categories",
        "screen-6": "Just click the add button to add a category, and then simply confirm",
        "title-7": "Statuses",
        "screen-7": "You can view a list of your statuses, as well as an example of how they look",
        "title-8": "How to Add Statuses",
        "screen-8": "It's as simple as pressing the add button, naming your status, choosing colors, and then confirming",
        "title-9": "User Profile",
        "screen-9": "Your user details, you can update your name, email, and password"
    },
    "apps-features": {
        "properties": {
            "name-1-activityp": "Manage your time",
            "detail-1-activityp": "You will be able to manage your time better and won’t forget things.",
            "name-2-activityp": "Plan your activities.",
            "detail-2-activityp": "Planning your activities maximizes your time.",
            "name-3-activityp": "Make the most of your time.",
            "detail-3-activityp": "Making the most of your time will help you accurately measure your time.",
            "name-1-cooking": "Many types of food.",
            "detail-1-cooking": "In this app, you will be able to discover an unimaginable number of recipes that you will love.",
            "name-2-cooking": "Socialize through recipes.",
            "detail-2-cooking": "You will be able to leave feedback on the recipes, thereby letting everyone know the quality of the recipe."
        }
    },
    "footer": {
        "description": "Welcome to Saltwort Devs. We are committed to protecting and respecting your privacy. The data provided by users or contacts is highly protected by our rigorous privacy policies. To know our privacy policies,",
        "contact-us": "Contact us"
    },
    "about-of": {
        "mision": " Mission",
        "vision": " Vision",
        "objectives": " Objectives",
        "mision-desc": " Our commitment is to develop proposals that drive the growth and efficiency of our clients, providing solutions tailored to an ever-evolving environment, with the goal of building a more sustainable and competitive future.",
        "vision-desc": " To be recognized as leaders in innovation and the development of technological solutions that transform the way companies operate and adapt to an ever-changing world. We aspire to set new standards of efficiency and sustainability in every sector we engage in, becoming the preferred partner for organizations seeking not only to grow but also to evolve with agility and resilience. At Saltwort, we envision a future where our solutions not only solve current problems but also anticipate future needs, creating a lasting and positive impact on society and the environment.",
        "objectives-desc": " At Saltwort, we focus on developing innovative technologies that optimize the operational efficiency of our clients, enabling them to adapt swiftly to market changes. We are committed to continuous research, creating sustainable solutions, and strategic expansion in global markets, while prioritizing customer satisfaction by delivering personalized, high-quality solutions."
    },
    "Devs": {
        "Luis-desc": "I am a junior developer with experience in various technologies, including using Android Studio with Kotlin and Visual Studio with C#. I have skills in database management, working with PostgreSQL, MySQL, and SQL Server Management. I consider myself a highly motivated person with a strong willingness to learn and grow in the development field.",
        "Samuel-desc": "With over 5 years of experience in various areas, I possess solid knowledge in developing Android applications using Java, Kotlin, and XML. In the web domain, I work with technologies such as JavaScript, HTML, CSS, Angular, and TypeScript to create interactive and efficient solutions. Additionally, I have experience in backend development with Node.js, PHP, and NestJS, as well as managing AWS services, including EC2, S3, and others.",
        "Aksel-desc": "Software Development and Management Engineer, Full Stack Developer with 2 years of experience in developing native iOS applications (Swift) and web applications with Angular. Expert in creating scalable REST APIs using NestJS and Node.js. Experienced in integrating external services, migrating technologies, and optimizing systems to improve performance and maintainability."
    },
    "Devs-big-desc": {
        "Luis-desc": "I am a junior developer with experience in various technologies, highlighting my proficiency in Android Studio with Kotlin for mobile app development, where I have created intuitive user interfaces and integrated advanced features. I also have experience with Visual Studio and C#, developing efficient desktop applications and services. My expertise extends to database management, with knowledge of PostgreSQL, MySQL, and administration tools. I consider myself a highly motivated individual, eager to learn, with a constant focus on improving my skills and growing in the development field.",
        "Samuel-desc": "Developer with over 5 years of experience in web and backend development, and expertise in Android Studio with Java and Kotlin. In mobile development, I have used Android Studio to create robust applications, optimizing performance and user experience with Java and Kotlin. I have experience in designing interfaces with XML, integrating APIs, and implementing architectures like MVVM. In the web domain, I am proficient in frontend technologies such as JavaScript, HTML, CSS, and Angular, with a focus on creating responsive interfaces. On the backend, I have extensive knowledge of Node.js, PHP, and NestJS, along with experience in generating XLSX and CSV files. Additionally, I am well-versed in AWS cloud services, including EC2, S3, and ELB, with experience in deploying applications on EC2 subdomains and managing S3 containers. I have used PM2 for deployments on AWS and have implemented purchase validations through Google APIs in backend projects. My experience also includes utilizing Bootstrap for CSS design and deploying applications in high-availability production environments.",
        "Aksel-desc": "I am a programmer with extensive experience in mobile application development for iOS using Swift, creating efficient and well-designed solutions for the Apple platform. In web development, I am proficient in Angular, building dynamic and responsive user interfaces that adapt to different devices. I have a strong background in creating REST APIs with NestJS in Node.js environments, enabling secure and efficient communication between systems. My experience includes integrating external services, migrating technologies to ensure smooth transitions without interruptions, and optimizing systems to enhance performance and scalability, adapting to the growing demands of the market.",
        "related-projects": "Related Projects"
    },
    "specific-project": {
        "properties": {
            "desc-general": "In this project, I served as an Android developer. Some of the key functions within this application are: ",
            "project-detail-ventaplus-luis": "Point of sale.",
            "revelant-skills-1-ventaplus-luis": "Actualizacion de versiones",
            "revelant-skills-2-ventaplus-luis": "Cambio de la version 24 a la version 33",
            "project-detail-crm-luis": "CRM for clients.",
            "revelant-skills-1-crm-luis": "Database queries",
            "revelant-skills-2-crm-luis": "PDF creation and Excel export",
            "revelant-skills-3-crm-luis": "MVC architecture",
            "project-detail-cvm-luis": "Internal project.",
            "revelant-skills-cvm-1-luis": "Dependency injection",
            "revelant-skills-cvm-2-luis": "Retrofit",
            "revelant-skills-cvm-3-luis": "MVVM architecture.",
            "project-detail-encode-aksel": "Static web application developed in Angular that centralizes the user manuals of the company's internal applications, along with terms and conditions and privacy policies. Its goal is to provide clear and organized access to official documentation..",
            "revelant-skills-encode-aksel": "Change of CocoaPods.",
            "project-detail-shopping-expense-samuel": "Functionality project or tool designed to record, in a systematic and organized manner, all relevant information about data entry in a project. It allows to manage and store specific details of each entry, ensuring accuracy and traceability. This system facilitates the administration and monitoring of entered data, optimizing the workflow and providing support in decision making by allowing a clear and updated view of the progress in the project.",
            "revelant-skills-shopping-expenses-samuel": "Project creation.",
            "project-detail-daily-expenses-samuel": "Income capture in the project.",
            "revelant-skills-daily-expenses-samuel": "Project creation",
            "project-detail-zeus": "ZEUS",
            "project-detail-sisap": "Application designed to provide mobility to Telcel's internal users for tracking SISAP tickets and the projects in which they are involved.",
            "project-detail-blue-board": "Telcel seeks to streamline the management of news (promotions), which is why the “BLUE BOARD” application was created. This application is responsible for displaying news in real time through a mobile app to all clients (regional administrators, distributors, managers, and salespeople), regardless of which of the 8 regions they are in. They will be kept informed about the different news and promotions that Telcel launches nationwide.",
            "project-detail-gamstore": "GAMSTORE",
            "project-detail-price-list": "Mobile application that shows users a price list of all their products, allowing them to filter which prices to display and search for products using a search bar.",
            "project-detail-venta-plus": "Point-of-sale system designed to streamline the product sales process. Sales begin with an opening and are managed through sales notes where products are added using a search tool. The system allows discounts per item, unit and quantity management, and supports multiple price lists. It includes features such as recovering previous notes, switching agents, and more. Once the sale is completed, a ticket can be printed if a printer is configured.",
            "project-detail-cv": "Vehicle control system that allows you to manage employee routes by assigning keys and vehicles. As a user, you can send reports via WhatsApp and view reports containing relevant information such as fuel consumption and key assignment history. You can also start and end your route upon reaching your destination, ensuring complete tracking of your journey.",
            "project-detail-crm": "A system that allows you to efficiently manage your quotations. You can view and consult them at any time, track their progress, assign reminders, and link specific contacts to each quotation. Additionally, you can send quotations directly via email to the desired contacts, streamlining communication and sales follow-up.",
            "project-detail-ruta": "Application designed to manage customer order submissions. It consists of two components: a mobile app and a desktop app. The mobile version allows users to send orders directly from their device, while the desktop version handles the administration of those orders, including forwarding them to the sales department and generating the necessary documents for invoicing.",
            "project-detail-checkprizes-movil": "Mobile application designed to quickly and efficiently view all products available in the company. It allows you to configure and select different price lists, which is ideal if you want to check specific prices from a particular list. Additionally, it features a scanner function that lets you search for products more easily by simply scanning their barcode."


        }
    },
    "project-relevance": {
        "encodemx-web": {
            "interface-creation-title": "Interface creation.",
            "interface-creation": "The site interface was fully designed and built, ensuring a clear structure, consistent aesthetics, and intuitive navigation.",
            "translate-web-title": "Translation management.",
            "translate-web": "An internationalization system was implemented to display content in three different languages, expanding the portal's reach to users of different languages.",
            "responsive-desing-title": "Responsive design.",
            "responsive-desing": "The interface was adapted to provide an optimal experience on mobile devices, ensuring functionality and readability on small screens.",
            "better-response-title": "Improved load times.",
            "better-response": "Site performance was optimized by converting heavy images to .webp format, significantly reducing loading times.",
            "skeletons-loaders-title": "Add loading skeletons.",
            "skeletons-loaders": "Skeletons were integrated as visual indicators during content loading, improving the perceived speed of the site."
        },
        "shopping-expense-ios": {
            "new-backend-title": "Creation of new backend and deployment on server.",
            "new-backend": "A new backend was developed from scratch and deployed on the server, providing a solid and scalable foundation for the application's operation.",
            "migration-request-title": "Migration of requests in the iOS mobile version.",
            "migration-request": "Network requests in the iOS mobile version were adapted and migrated to ensure compatibility and stability with the new backend.",
            "backup-system-title": "Backup system in JSON format.",
            "backend-system": "An automatic backup system in JSON format was created, allowing data recovery in case of failures.",
            "support-app-title": "Support for user-reported issues.",
            "support-app": "Functional issues reported by users were addressed and resolved, contributing to a more stable user experience.",
            "better-time-title": "Improvement in certain loading times.",
            "better-time": "Key processes in the backend and mobile app were optimized to reduce response and loading times.",
            "dependetion-system-title": "Migration of dependencies from CocoaPods to Swift Package Manager.",
            "dependetion-system": "iOS project dependencies were migrated from CocoaPods to Swift Package Manager, simplifying management and reducing integration errors.",
            "sync-process-title": "Information synchronization processes with the server.",
            "sync-process": "Synchronization mechanisms were developed to ensure the app functions correctly even offline, updating data when the network is restored."
        },
        "shopping-expenses-android": {
            "title-subscription": "Subscription Implementation.",
            "detail-subscription": "The Google Play Billing library was implemented to enable users to purchase monthly and annual subscriptions.",
            "title-profile-user": "Profile Section Creation.",
            "detail-profile-user": "A section was developed to manage the user profile and display the details of their subscriptions.",
            "title-mangment-group": "User Management Section.",
            "detail-mangment-group": "A section was created to allow user management by project, facilitating multi-user management and information exchange among them.",
            "title-connect-backend": "App Connection to Backend.",
            "description-connect-backend": "Synchronization of local information with the server database was established, allowing users to asynchronously access their data from multiple devices.",
            "title-change-model-room": "Migration to Room Database.",
            "detail-change-model-room": "Migration was performed from a Cursor-based system to Room Database, implementing the necessary adjustments to enable synchronization between devices.",
            "title-change-model-backups": "Migration of Backup Model (Local and Online).",
            "detail-change-model-backups": "The mechanism for creating and managing both local and cloud backups was improved, providing greater security and ease of use for users.",
            "title-backup-system": "Backup System in JSON Format.",
            "detail-backend-system": "An automatic backup system in JSON format was implemented, allowing data recovery in case of failure or data loss.",
            "title-migration-backend": "Migration of Request Model in Android.",
            "description-migration-backend": "Migration to the new backend model was carried out as part of the system's second version and adoption of NestJS, which increased efficiency in data synchronization.",
            "title-update-gradle": "Gradle Library Updates.",
            "detail-update-gradle": "Library versions used in the project, managed via Gradle, were updated to ensure improved compatibility and performance.",
            "title-managment-information": "Information Processing Optimization.",
            "detail-managment-information": "Significant improvements were made in data processing, reducing user wait times by up to 40% during app interaction.",
            "title-local-sync": "Local Storage Management.",
            "detail-local-sync": "A new model was adopted for local storage and synchronization with REST services, improving code organization, data handling performance, and enabling offline operation.",
            "title-library-graph": "Graph Visualization Library.",
            "detail-library-graph": "A specialized library was integrated for graphical representation of user information, facilitating visual interpretation of displayed data."
        },
        "shopping-expense-web": {
            "new-web-title": "Creation of New Web Version.",
            "new-web": "A new version of the web application was developed, modernizing its structure, simplifying maintenance, and establishing clean code and best practices.",
            "title-create-model-sync": "Design of Initial and Current Synchronization Model.",
            "detail-create-model-sync": "Planning and analysis were conducted for the synchronization model between mobile devices, web platform, backend, and database, enabling real-time information transmission, offline functionality, and synchronization of data from multiple sources.",
            "new-backend-title": "Creation of New Backend and Server Deployment.",
            "new-backend": "A new backend was developed from scratch and deployed on the server, providing a solid and scalable foundation for the application's operation.",
            "implementation-frameworks-title": "Implementation of Angular Material in Components.",
            "implementation-frameworks": "The Angular Material framework was integrated into some tables with pagination, improving user experience and creating a more user-friendly design.",
            "migration-request-title": "Request Connection to New Backend.",
            "migration-request": "Communication logic between web and mobile backend was adapted, ensuring data integrity and correct system operation.",
            "deploy-version-title": "Deployment of New Version on Server.",
            "deploy-version": "The new web system was deployed to production, ensuring availability for users and monitoring its correct functioning."
        },
        "console-encodemx-web": {
            "admin-user-title": "Functions for managing application users.",
            "admin-user": "Key user management functions were developed, including subscription validation, purchase verification, password recovery, restoration of deleted accounts, and modification of active subscriptions.",
            "admin-database-title": "Administrative database functions.",
            "admin-database": "Tools were implemented for advanced operations such as full data copying between databases and complete export of data for a specific user.",
            "cron-job-title": "Scheduled jobs to validate user purchases periodically.",
            "cron-job": "Automated tasks (cron jobs) were implemented to periodically validate user purchases, ensuring the validity of access and services."
        },
        "productivity-web": {
            "proyect-requirements-title": "Gathering of general project requirements.",
            "proyect-requirements": "A detailed analysis was conducted to define the functional and non-functional requirements of the system, aligning client needs with the project's technical objectives.",
            "database-title": "Database creation and technical requirements analysis.",
            "database": "The database structure was designed and implemented based on the analysis of information flows and relationships between entities.",
            "interfaz-desing-title": "Interface creation and design.",
            "interfaz-desing": "The user interface was developed with a focus on user experience, usability, and visual adaptability across different devices.",
            "backend-title": "Backend development and deployment.",
            "backend": "The backend was built to handle logic, data management, and security, and was deployed to the corresponding server.",
            "deploy-web-title": "Web version deployment.",
            "deploy-web": "The web application was published in the production environment, ensuring its availability to end users.",
            "request-backend-title": "Make requests to the backend.",
            "request-backend": "The interface was connected to the backend, enabling smooth and secure data transmission between client and server."
        },
        "daily-expenses-4-web": {
            "clean-code-title": "Code restructuring and fixes.",
            "clean-code": "A thorough reorganization of the code was carried out to improve readability, maintainability, and performance, while correcting detected errors.",
            "migration-request-title": "Migration of requests to a new API.",
            "migration-request": "System requests were adapted to consume a new API, ensuring compatibility and better performance.",
            "imlements-web-socket-title": "Migration of the request system to WebSocket.",
            "imlements-web-socket": "Communication via WebSocket was implemented to optimize real-time interaction between client and server.",
            "multi-currency-title": "Multi-currency functionality with calculations.",
            "multi-currency": "A function was developed to handle multiple currencies, performing conversions and automatic calculations within the system.",
            "support-title": "Fixes for user-reported errors and support.",
            "support": "User-reported errors were addressed and resolved, improving system stability and usability.",
            "custom-components-title": "Creation of new custom components with new features.",
            "custom-components": "Custom components were designed and implemented with specific functionalities tailored to the project's needs."
        },
        "daily-expenses-4-ios": {
            "library-implementation-title": "Integration of external libraries.",
            "library-implementation": "Implemented and configured libraries such as SwiftyJSON, Charts, Alamofire, and Google SDKs to enhance the app's functionality and user experience.",
            "new-backend-title": "Adaptation to new backend.",
            "new-backend": "Updated network requests, migrating existing requests for compatibility with a new backend, ensuring service continuity and proper data integration.",
            "core-data-manager-title": "Optimization of data handling with Core Data.",
            "core-data-manager": "Redesigned the data insertion flow by directly using Core Data entities, removing intermediate steps with structures and improving performance and maintainability.",
            "data-synchronization-title": "Local data synchronization.",
            "data-synchronization": "Developed a synchronization system to keep the app's local data updated with the server, improving reliability and offline experience.",
            "icon-update-title": "Application icon update.",
            "icon-update": "Replaced and implemented new icons in the app to align with the corporate image redesign.",
            "cocoapods-migration-title": "Migration from CocoaPods to Swift Package Manager.",
            "cocoapods-migration": "Carried out the migration of dependencies from CocoaPods to Swift Package Manager, facilitating library management and improving project stability.",
            "translations-title": "Implementation of multilingual translations.",
            "translations": "Configured translation and localization management in English and Spanish using Localizable Strings, enabling multilingual support in the app.",
            "data-persistence-title": "Persistence of complex and simple data.",
            "data-persistence": "Developed persistence handling using Core Data for complex data and UserDefaults for simple data, improving efficiency and structure of local storage.",
            "coredata-context-title": "Handling Core Data contexts.",
            "coredata-context": "Implemented and properly configured Core Data's private and main contexts, ensuring safe and efficient persistence operations."
        },
        "samuel-daily-expenses-4-android": {
            "title-desing": "XML Design for Android Views",
            "detail-desing": "The necessary layouts and resource collections were created for the proper functioning of the application.",
            "title-room": "Room Database Model",
            "detail-room": "The database model and schema were created using Room for local data persistence.",
            "title-sync": "Synchronization Model – Versions v1, v2, and v3",
            "detail-sync": "The synchronization model was designed and developed for backend versions v1, v2, and v3, starting from scratch and evolving into a scalable version optimized for handling large volumes of data.",
            "title-managment-reports": "Report Management",
            "detail-managment-reports": "Classes were developed to manage various types of reports within the application, considering the specific logic of each report screen.",
            "title-subscription": "Subscription Implementation",
            "detail-subscription": "Google Play Billing was integrated to enable users to purchase monthly and annual subscriptions.",
            "title-mangment-multi-account": "Multi-Account Management",
            "detail-mangment-multi-account": "Functionality was implemented to manage multiple accounts within the application, allowing users to handle and compare them.",
            "title-mangment-photo": "Image Handling",
            "detail-mangment-photo": "Logic was added for uploading and synchronizing user-provided images, both individually and in bulk."
        },
        "samuel-daily-expenses-4-web": {
            "title-database": "Database Modeling and Management",
            "detail-database": "Analysis and design were carried out for the creation, maintenance, and modification of the project’s database.",
            "title-backend": "Backend Development (Versions 1 to 3)",
            "detail-backend": "In collaboration with the development team, the PHP backend was created with CRUD functionality for both the web and mobile versions, including improvements to the synchronization model.",
            "title-frequent-operations": "Online Frequent Records",
            "detail-frequent-operations": "An internal backend model was developed for managing and generating frequent records automatically.",
            "title-purchased-php": "Subscription Management with Google Play Billing (PHP)",
            "detail-purchased-php": "Subscription renewals were implemented using sockets and Google Play Billing, extending access time via PHP.",
            "title-purchased-nestjs": "Subscription Management with Google Play Billing (NestJS)",
            "detail-purchased-nestjs": "Subscription renewal functionality was implemented using sockets, this time with the NestJS framework for the backend.",
            "title-bugs": "Production Version Bug Fixes",
            "detail-bugs": "Bugs reported by users in the initial production release were fixed.",
            "title-improvements": "Visual and Responsive Improvements",
            "detail-improvements": "Design improvements requested by the designer were implemented across multiple web components.",
            "title-sync": "Backend and Frontend Synchronization",
            "detail-sync": "Enhancements were made to the data loading and synchronization logic between the backend and the web interface.",
            "title-responsive": "Responsive Design",
            "detail-responsive": "Responsive design was incorporated to support optimal use on tablets and mobile devices."
        },
        "samuel-zeus": {
            "title-modulo-swat": "Integration of the SWAT module for Help Desk customer service",
            "detail-modulo-swat": "The SWAT module was integrated into the application to manage customer service requests from the Help Desk.",
            "title-correccion-bugs": "Fixes for visual and functional bugs",
            "detail-correccion-bugs": "Design issues and functional inconsistencies were resolved to enhance the user experience.",
            "title-busqueda-bes": "Ticket search on the BES platform",
            "detail-busqueda-bes": "A feature was implemented to allow ticket queries outside the Zeus environment via integration with the BES platform.",
            "title-diseno-responsivo": "Functional responsive design",
            "detail-diseno-responsivo": "The interface was adapted to ensure an optimal experience across various devices and screen sizes.",
            "title-crud-servicios": "Implementation of CRUD for services",
            "detail-crud-servicios": "A CRUD module was developed to manage the services available within the application.",
            "title-mejoras-usuarios": "Improvements in user management"
        },
        "samuel-sisap": {
            "title-video-library": "Video playback library implementation",
            "detail-video-library": "A library was integrated to enable multimedia playback within the application.",
            "title-preferences-filters": "Filter management using preferences",
            "detail-preferences-filters": "Custom filters were implemented using the user's preference system.",
            "title-java-gradle-update": "Java version and Gradle update",
            "detail-java-gradle-update": "The Java version was updated and migrated to a newer Gradle version to ensure compatibility and project security.",
            "title-vulnerability-fix": "Vulnerability fixes detected by Checkmarks",
            "detail-vulnerability-fix": "Critical vulnerabilities and warnings reported by Checkmarks static analysis were fixed to strengthen system security."
        },
        "price-list-movil": {
            "title-code-reestructure": "Code Restructure",
            "detail-code-reestructure": "Classes were modified to organize the data display more efficiently, improving performance times.",
            "title-creation-preferences": "Creation of New Preferences",
            "detail-creation-preferences": "New shared preferences were created to identify which price lists the user will use.",
            "title-delete-trashcode": "Delete Trash Code",
            "detail-delete-trashcode": "Unnecessary code was removed from various classes, such as redundant queries, commented-out code, unused functions, etc."
        },
        "venta-movil": {
              "title-code-reestructure": "Code Restructuring",
                "detail-code-reestructure": "Classes were refactored to better organize data display, resulting in improved performance.",

                "title-ui-design": "User Interface Design",
                "detail-ui-design": "All main application screens were designed, including Home, Sales, Quotation, General Settings, Printer Settings, and essential dialogs like Price Checker, Price Change, and Quantity Adjustment, ensuring a cohesive and functional user experience.",

                "title-architecture-setup": "MVVM & Clean Architecture Implementation",
                "detail-architecture-setup": "The project was structured using the MVVM pattern and Clean Architecture principles to ensure separation of concerns, maintainability, and scalability.",

                "title-api-integration": "API Integration Using Retrofit",
                "detail-api-integration": "Retrofit was used to consume REST APIs, allowing the application to download essential catalog data such as products, clients, and price lists from the server.",

                "title-dependency-injection": "Dependency Injection Setup",
                "detail-dependency-injection": "A dependency injection system was implemented to manage repositories and ViewModels efficiently, improving code modularity and testing.",

                "title-room-database": "Local Data Management with Room",
                "detail-room-database": "Room was adopted for local database management, using DAOs to handle insertions, deletions, and updates in a reliable and scalable way.",

                "title-printer-support": "Printer Integration for Ticket Printing",
                "detail-printer-support": "The application was integrated with printing capabilities to generate and print sales tickets directly from the device.",

                "title-functional-development": "Complete Feature Implementation",
                "detail-functional-development": "All key functionalities were developed, including API consumption, sales operations, ticket printing, discount management, movement creation/editing, and configuration modules."
        },
          "venta-desktop" : {
                "title-ui-enhancements": "UI Enhancements",
                "detail-ui-enhancements": "New configuration options were added to the application, requiring improvements to the settings view in both design and functionality to properly accommodate these changes.",

                "title-sellers-report-view": "Add Sellers Report View",
                "detail-sellers-report-view": "A new view was added for the sellers report, featuring date range filters, a DataGridView for displaying results, and multiple ComboBoxes and CheckBoxes for advanced filtering options.",

                "title-sellers-report-implementation": "Sellers Report Implementation",
                "detail-sellers-report-implementation": "The sellers report was implemented using MVVM architecture, separating logic from presentation via interfaces between the view and controller. Specific methods were created to query and display the required data, using complex SQL queries with INNER JOIN clauses to retrieve all necessary report information. The view includes a grid for agents, date range selection, and detailed results.",

                "title-excel-export": "Excel Creation and Export",
                "detail-excel-export": "After retrieving the data, it is displayed in a grid and can be exported to an Excel file. An Excel utility was implemented in the system, along with a progress bar to indicate export progress, since a large number of records may be involved.",

                "title-ticket-updates": "Ticket Modifications",
                "detail-ticket-updates": "Modifications were made to various types of tickets, including delivery, payment, opening, opening close, and sales, to ensure they align with the new system configurations."
            },
             "cvm":{
                "title-architecture-setup": "MVVM Structure",
                "detail-architecture-setup": "The project was created and progressively configured following Clean Architecture principles and the MVVM pattern, enabling clear separation of concerns and maintainable code.",

                "title-api-consumption": "API Consumption",
                "detail-api-consumption": "Retrofit was used to consume an API that delivers essential catalog data to the mobile device, including products, routes, and agents.",

                "title-dependency-injection": "Dependency Injection",
                "detail-dependency-injection": "A dependency injection system was implemented as part of the architecture to better manage repositories and ViewModels, supporting organized and testable development.",

                "title-route-management": "Route Management",
                "detail-route-management": "The mobile app constantly receives notifications to check if a new route has been assigned to the user. This involves periodic API requests to retrieve updated route information.",

                "title-report-sending": "Report Submission",
                "detail-report-sending": "While on route, users can create a report, upload multiple photos, and send them via WhatsApp to share updates and provide visual documentation of their work.",

                "title-fuel-consumption": "Fuel Consumption",
                "detail-fuel-consumption": "A view was developed to calculate fuel consumption based on money spent, distance traveled, or amount refueled, providing users with better control over fuel usage."
            },
         "cv-desktop" : {
                "title-wpf-ui": "WPF UI Screens",
                "detail-wpf-ui": "WPF screens were created to deliver a more elegant, stylish, and modern user interface experience.",

                "title-architecture-mvvm": "MVVM Architecture",
                "detail-architecture-mvvm": "The project was developed using the MVVM architecture, which enabled better code organization and efficient handling of repositories and ViewModels.",

                "title-excel-export": "Excel Creation and Export",
                "detail-excel-export": "Once the data is retrieved, it is displayed in a grid and can be exported to an Excel file. An export utility was implemented, along with a progress bar to show the export status, which is especially useful when dealing with large datasets.",

                "title-report-creation": "Report Creation",
                "detail-report-creation": "Several reports were developed to provide insights into fuel consumption and allow users to view more detailed information within each report.",

                "title-agent-management": "Agent Management",
                "detail-agent-management": "A view was implemented to create new agents and update information for existing ones.",

                "title-key-management": "Key Management",
                "detail-key-management": "Functionality was added to create keys, assign them to agents or vehicles, and update them as needed.",

                "title-vehicle-management": "Vehicle Management",
                "detail-vehicle-management": "A view was added to create and update vehicle information, making their administration within the system easier."
            },
        "crm" : {
                "title-ui-update": "UI Update",
                "detail-ui-update": "New system configurations were added, which required modifying the settings dialog to include new options that improve the user experience.",

                "title-reminders-module": "Reminders Module",
                "detail-reminders-module": "A reminders module was developed and integrated with quotations. It allows users to create alerts for client follow-up calls, new quotation creation, quotation edits, and other relevant actions.",

                "title-sql-queries": "SQL Query Development",
                "detail-sql-queries": "SQL queries were created and modified to handle essential system data such as agents, quotation follow-ups, and quotations themselves. These queries were complex, as this was the initial phase of adopting SQL more consistently within the system.",

                "title-design-refresh": "Icon and Design Refresh",
                "detail-design-refresh": "The system was fully redesigned, including a new logo and updated color scheme. All views were adjusted to reflect the new design."
                },
        "ruta-movil" : {
                "title-java-usage": "Java Usage",
                "detail-java-usage": "This mobile application is developed in Java without the use of ViewModels, DAOs, or any structured architecture like MVVM. However, the codebase follows Clean Architecture principles to maintain clear separation of concerns.",

                "title-api-send-optimization": "API Send Optimization",
                "detail-api-send-optimization": "The process of sending route notes to the API was optimized, as it was previously slow even with a fast connection. The updated implementation greatly improves speed and reliability.",

                "title-force-sync-implementation": "Forced Sync Implementation",
                "detail-force-sync-implementation": "A forced synchronization feature was added to allow downloading all catalogs again when any fail. The catalogs are downloaded from oldest to newest, and the process is optimized to work well even under poor network conditions.",

                "title-view-modifications": "View Modifications",
                "detail-view-modifications": "Views in the mobile app were modified due to changes in the desktop version. The most affected sections were the configuration settings and the note sending to route.",

                "title-printing-enhancement": "Printing Enhancement",
                "detail-printing-enhancement": "The printing process was improved for better stability, and a reprint feature was added to allow printing a note again even after it has already been sent to the API."
                },
        "ruta-desktop" : {
                "title-mvc-architecture": "MVC Architecture",
                "detail-mvc-architecture": "This project was structured using the MVC architecture, allowing for clean management of multiple controllers and ensuring clear separation of responsibilities throughout the system.",

                "title-smtp-imap-email": "SMTP and IMAP Email Sending",
                "detail-smtp-imap-email": "The email configuration view was updated to allow users to select between SMTP and IMAP sending methods. This enhancement offers more flexibility based on the user's email server setup.",

                "title-query-optimization": "Query Optimization",
                "detail-query-optimization": "Complex SQL queries handling sensitive data were optimized due to slow database performance. The synchronization functions were also improved to ensure they fetch information more efficiently."
            },
        "check-prizes" : {
                "title-mvvm-redesign": "MVVM Redesign",
                "detail-mvvm-redesign": "Initially, this application did not follow MVVM or Clean Architecture. The entire project was redesigned to adopt these architectures, requiring major changes to existing functions. ViewModels, repositories, entities, DAOs, and the local database were created to ensure proper data flow and separation of concerns.",

                "title-dependency-injection": "Dependency Injection",
                "detail-dependency-injection": "As part of the mobile application's architectural redesign, dependency injection was implemented to ensure clean decoupling between components and better scalability.",

                "title-async-process-improvements": "Asynchronous Process Improvements",
                "detail-async-process-improvements": "The application did not originally support asynchronous operations. Background processing was implemented to improve performance, prevent UI blocking, and enhance overall user experience.",

                "title-ui-enhancements": "UI Enhancements",
                "detail-ui-enhancements": "As part of the redesign, several user interface views were updated. Edits were made to text fields, labels, colors, and element positioning to provide a more modern and functional interface."
            } 
    },
    "random-text": {
        "knowmore": "know more"
    },
    "ap-app-info": {
        "screen1-title": "Home",
        "screen1-text1": "On this screen, you can enter your username and password",
        "screen1-text2": "If you don't have a registered email, you can create an account",
        "screen1-text3": "If you don't feel like creating an account, you can sign in with Google",
        "screen1-text4": "You can recover your password if you have forgotten it",
        "screen2-title": "Main Screen",
        "screen2-text1": "This is the main screen",
        "screen2-text2": "Your dashboard information will be shown as soon as you enter the app",
        "screen2-text3": "At the bottom, you can see the top 3 categories you use the most",
        "screen2-text4": "On the left side, you have all the sections",
        "screen3-title": "Add Statuses",
        "screen3-text1": "You only need to write the name of your status, choose your colors, and confirm the status when you're done",
        "screen3-text2": "Once added, the status will appear in the list",
        "screen3-text3": "You can see an example of how your status looks",
        "screen4-title": "Board Added",
        "screen4-text1": "This is how it looks when you add a board",
        "screen4-text2": "On the card, you can see the name and details you previously added",
        "screen4-text3": "You can add as many as you like",
        "screen5-title": "Categories",
        "screen5-text1": "You can see your categories in a list format",
        "screen5-text2": "You can add more categories",
        "screen5-text3": "Edit them if you wish",
        "screen6-title": "Category Added",
        "screen6-text1": "To add a category, just click the add button and it will let you write the name of your category",
        "screen6-text2": "Once added, it will appear in the list",
        "screen6-text3": "You can sort your categories alphabetically or delete them",
        "screen6-text4": "You can also search through your categories",
        "screen7-title": "Statuses",
        "screen7-text1": "These are the statuses you have, ordered in a list format",
        "screen7-text2": "You can add more statuses if you wish",
        "screen7-text3": "Sorting your statuses alphabetically is also possible or searching through them",
        "screen8-title": "Add Statuses",
        "screen8-text1": "You only need to write the name of your status, choose your colors, and confirm the status when you're done",
        "screen8-text2": "Once added, the status will appear in the list",
        "screen8-text3": "You can see an example of how your status looks",
        "screen9-title": "User Information",
        "screen9-text1": "These are your user details",
        "screen9-text2": "You can change them anytime you want",
        "screen9-text3": "You can choose your preferred colors"
    }
}